---
title: Access Minio Instance
owner: Partners
---

Access Minio storage from the Web-UI, Minio Client Tool (mc), and client-SDKs, as illustrated in the following sections.

## Minio Web-UI

After creating a Minio instance, you can access the storage using Minio-WebUI.

Get the Dashboard-URL using the `cf service` command:

![alt-text=""](./images/cf-service.png)

Access the Dashboard URL `https://d3ecc8f6-5684-4882-90c4-179285ff9b09.sys.YOUR-VMware Tanzu-DOMAIN.com` using a web browser.

![alt-text=""](./images/web-browser.png)

## Minio Client Tool

Install [mc](https://minio.io/downloads.html#download-client) and configure `mc` with the command:

```sh
mc config host add minio https://d3ecc8f6-5684-4882-90c4-179285ff9b09.sys.your-pcf-domain.com randomaccesskey randomsecretkey
```

Create a bucket:

```sh
mc mb minio/testbucket
```

Upload a file:

```sh
mc cp /tmp/piano.mp3 minio/testbucket
```

Download a file:

```sh
mc cp minio/testbucket/piano.mp3 /tmp/new-piano.mp3
```

For more information about using mc, read the [documentation](https://docs.minio.io/docs/minio-client-complete-guide).

## Client SDKs

### Minio Client SDKs
Access Minio storage with the following Minio SDKs:

* [minio-go](https://docs.minio.io/docs/golang-client-quickstart-guide)
* [minio-java](https://docs.minio.io/docs/java-client-quickstart-guide)
* [minio-dotnet](https://docs.minio.io/docs/dotnet-client-quickstart-guide)
* [minio-js](https://docs.minio.io/docs/javascript-client-quickstart-guide)
* [minio-python](https://docs.minio.io/docs/python-client-quickstart-guide)

Here is an example Javascript code to upload a file using minio-js:

```js
var Minio = require('minio')

// Instantiate the minio client with the endpoint
// and access keys as shown below.
var minioClient = new Minio.Client({
    endPoint: 'd3ecc8f6-5684-4882-90c4-179285ff9b09.sys.your-pcf-domain.com',
    port: 443,
    secure: true,
    accessKey: 'randomaccesskey',
    secretKey: 'randomsecretkey'
});

// File that needs to be uploaded.
var file = '/tmp/photos-europe.tar'

// Make a bucket called europetrip.
minioClient.makeBucket('europetrip', '', function(err) {
    if (err) return console.log(err)

    // Using fPutObject API upload your file to the bucket europetrip.
    minioClient.fPutObject('europetrip', 'photos-europe.tar', file, 'application/octet-stream', function(err, etag) {
      if (err) return console.log(err)
      console.log('File uploaded successfully.')
    });
});
```
Use the `accessKey` and `secretKey` that were used to create the Minio instance.

### Amazon Client SDKs

Because Minio is Amazon S3 compatible, you can also access it with the AWS SDKs:

* [aws-sdk-go](https://docs.minio.io/docs/how-to-use-aws-sdk-for-go-with-minio-server)
* [aws-sdk-java](https://docs.minio.io/docs/how-to-use-aws-sdk-for-java-with-minio-server)
* [aws-sdk-dotnet](https://docs.minio.io/docs/how-to-use-aws-sdk-for-net-with-minio-server)
* [aws-sdk-js](https://docs.minio.io/docs/how-to-use-aws-sdk-for-javascript-with-minio-server)
* [aws-sdk-python](https://docs.minio.io/docs/how-to-use-aws-sdk-for-python-with-minio-server)
* [aws-sdk-php](https://docs.minio.io/docs/how-to-use-aws-sdk-for-php-with-minio-server)
* [aws-sdk-ruby](https://docs.minio.io/docs/how-to-use-aws-sdk-for-ruby-with-minio-server)
